{
  "name": "OKR进度自动更新工作流",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "api/okr/auto-update",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "okr-update-webhook",
      "name": "OKR更新触发器",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [280, 300],
      "webhookId": "okr-auto-update"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "user-id",
              "name": "userId",
              "value": "={{ $('OKR更新触发器').item.json.body.userId }}",
              "type": "string"
            },
            {
              "id": "trigger-type",
              "name": "triggerType",
              "value": "={{ $('OKR更新触发器').item.json.body.triggerType || 'learning_activity' }}",
              "type": "string"
            },
            {
              "id": "activity-data",
              "name": "activityData",
              "value": "={{ $('OKR更新触发器').item.json.body.activityData || {} }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-update-params",
      "name": "提取更新参数",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [500, 300]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "{{ $env.SUPABASE_URL }}/rest/v1/okrs?user_id=eq.{{ $json.userId }}&status=eq.active&select=*",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "get-active-okrs",
      "name": "获取活跃OKR",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [720, 300]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "{{ $env.SUPABASE_URL }}/rest/v1/user_progress?user_id=eq.{{ $('提取更新参数').item.json.userId }}&progress=gte.100&select=course_id,lesson_id,completed_at",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "get-completed-lessons",
      "name": "获取已完成课程",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [940, 300]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "{{ $env.SUPABASE_URL }}/rest/v1/learning_stats?user_id=eq.{{ $('提取更新参数').item.json.userId }}&date=gte.{{ new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] }}&select=*",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "get-learning-stats",
      "name": "获取学习统计",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1160, 300]
    },
    {
      "parameters": {
        "jsCode": "const okrData = $('获取活跃OKR').first().json || [];\nconst completedLessons = $('获取已完成课程').first().json || [];\nconst learningStats = $('获取学习统计').first().json || [];\nconst params = $('提取更新参数').first().json;\n\nconsole.log('OKR进度计算 - OKR数量:', okrData.length, '完成课程:', completedLessons.length);\n\n// 计算学习统计\nlet totalStudyTime = 0;\nlet totalLessonsCompleted = 0;\nlet totalCoursesCompleted = 0;\n\nlearningStats.forEach(stat => {\n  totalStudyTime += stat.total_time || 0;\n  totalLessonsCompleted += stat.lessons_completed || 0;\n  totalCoursesCompleted += stat.courses_completed || 0;\n});\n\n// 计算每个OKR的进度\nconst updatedOKRs = [];\n\nokrData.forEach(okr => {\n  let newProgress = okr.progress || 0;\n  let progressUpdated = false;\n  let updateReason = '';\n  \n  // 分析关键结果并计算进度\n  const keyResults = okr.key_results || [];\n  let completedKeyResults = 0;\n  \n  keyResults.forEach((kr, index) => {\n    const krLower = kr.toLowerCase();\n    \n    // 基于关键结果类型计算进度\n    if (krLower.includes('完成') && krLower.includes('课程')) {\n      // 课程完成类型的关键结果\n      const targetMatch = kr.match(/(\\d+)/);\n      if (targetMatch) {\n        const target = parseInt(targetMatch[1]);\n        if (totalCoursesCompleted >= target) {\n          completedKeyResults++;\n        }\n      }\n    } else if (krLower.includes('学习') && krLower.includes('小时')) {\n      // 学习时间类型的关键结果\n      const targetMatch = kr.match(/(\\d+)/);\n      if (targetMatch) {\n        const targetHours = parseInt(targetMatch[1]);\n        const actualHours = totalStudyTime / 3600;\n        if (actualHours >= targetHours) {\n          completedKeyResults++;\n        }\n      }\n    } else if (krLower.includes('掌握') || krLower.includes('学会')) {\n      // 技能掌握类型的关键结果（基于完成的课程数量估算）\n      if (totalLessonsCompleted >= 10) { // 假设完成10个课程表示掌握一项技能\n        completedKeyResults++;\n      }\n    }\n  });\n  \n  // 计算新的进度百分比\n  if (keyResults.length > 0) {\n    const calculatedProgress = Math.round((completedKeyResults / keyResults.length) * 100);\n    if (calculatedProgress > newProgress) {\n      newProgress = calculatedProgress;\n      progressUpdated = true;\n      updateReason = `基于学习活动自动更新：完成了${completedKeyResults}/${keyResults.length}个关键结果`;\n    }\n  }\n  \n  // 检查是否需要更新\n  if (progressUpdated) {\n    updatedOKRs.push({\n      id: okr.id,\n      title: okr.title,\n      oldProgress: okr.progress || 0,\n      newProgress: newProgress,\n      updateReason: updateReason,\n      isCompleted: newProgress >= 100\n    });\n  }\n});\n\nconst result = {\n  userId: params.userId,\n  triggerType: params.triggerType,\n  totalOKRs: okrData.length,\n  updatedOKRs: updatedOKRs,\n  learningMetrics: {\n    totalStudyTime: totalStudyTime,\n    totalLessonsCompleted: totalLessonsCompleted,\n    totalCoursesCompleted: totalCoursesCompleted\n  },\n  timestamp: new Date().toISOString()\n};\n\nconsole.log('OKR进度更新结果:', JSON.stringify(result, null, 2));\nreturn result;"
      },
      "id": "calculate-okr-progress",
      "name": "计算OKR进度",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1380, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "has-updates",
              "leftValue": "={{ $json.updatedOKRs.length }}",
              "rightValue": "0",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-updates-needed",
      "name": "检查是否需要更新",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1600, 300]
    },
    {
      "parameters": {
        "jsCode": "const progressData = $input.first().json;\nconst updatedOKRs = progressData.updatedOKRs;\n\n// 为每个需要更新的OKR创建更新请求\nconst updateRequests = updatedOKRs.map(okr => ({\n  okrId: okr.id,\n  newProgress: okr.newProgress,\n  updateReason: okr.updateReason,\n  isCompleted: okr.isCompleted\n}));\n\nreturn updateRequests;"
      },
      "id": "prepare-update-requests",
      "name": "准备更新请求",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1820, 300]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "{{ $env.SUPABASE_URL }}/rest/v1/okrs?id=eq.{{ $json.okrId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "progress",
              "value": "={{ $json.newProgress }}"
            },
            {
              "name": "status",
              "value": "={{ $json.isCompleted ? 'completed' : 'active' }}"
            },
            {
              "name": "updated_at",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "update-okr-progress",
      "name": "更新OKR进度",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2040, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "{{ $env.SUPABASE_URL }}/rest/v1/okr_progress",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "okr_id",
              "value": "={{ $('准备更新请求').item.json.okrId }}"
            },
            {
              "name": "user_id",
              "value": "={{ $('计算OKR进度').item.json.userId }}"
            },
            {
              "name": "progress",
              "value": "={{ $('准备更新请求').item.json.newProgress }}"
            },
            {
              "name": "notes",
              "value": "={{ $('准备更新请求').item.json.updateReason }}"
            }
          ]
        },
        "options": {}
      },
      "id": "record-progress-history",
      "name": "记录进度历史",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2260, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": true,
          "message": "OKR进度更新完成",
          "data": {
            "userId": "={{ $('计算OKR进度').item.json.userId }}",
            "totalOKRs": "={{ $('计算OKR进度').item.json.totalOKRs }}",
            "updatedCount": "={{ $('计算OKR进度').item.json.updatedOKRs.length }}",
            "updatedOKRs": "={{ $('计算OKR进度').item.json.updatedOKRs }}",
            "learningMetrics": "={{ $('计算OKR进度').item.json.learningMetrics }}"
          },
          "timestamp": "={{ $('计算OKR进度').item.json.timestamp }}"
        },
        "options": {}
      },
      "id": "success-update-response",
      "name": "成功更新响应",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2480, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": true,
          "message": "无需更新OKR进度",
          "data": {
            "userId": "={{ $('计算OKR进度').item.json.userId }}",
            "totalOKRs": "={{ $('计算OKR进度').item.json.totalOKRs }}",
            "reason": "当前学习进度未触发OKR更新条件"
          },
          "timestamp": "={{ $('计算OKR进度').item.json.timestamp }}"
        },
        "options": {}
      },
      "id": "no-update-response",
      "name": "无更新响应",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1820, 480]
    }
  ],
  "pinData": {},
  "connections": {
    "OKR更新触发器": {
      "main": [
        [
          {
            "node": "提取更新参数",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "提取更新参数": {
      "main": [
        [
          {
            "node": "获取活跃OKR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取活跃OKR": {
      "main": [
        [
          {
            "node": "获取已完成课程",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取已完成课程": {
      "main": [
        [
          {
            "node": "获取学习统计",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取学习统计": {
      "main": [
        [
          {
            "node": "计算OKR进度",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "计算OKR进度": {
      "main": [
        [
          {
            "node": "检查是否需要更新",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "检查是否需要更新": {
      "main": [
        [
          {
            "node": "准备更新请求",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "无更新响应",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "准备更新请求": {
      "main": [
        [
          {
            "node": "更新OKR进度",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "更新OKR进度": {
      "main": [
        [
          {
            "node": "记录进度历史",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "记录进度历史": {
      "main": [
        [
          {
            "node": "成功更新响应",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "okr-updater-v1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "OKRProgressUpdater",
  "tags": ["okr", "progress", "automation"]
}
