{
  "name": "获取课程统计信息工作流",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "api/courses/stats/={{ $parameter.userId }}",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "course-stats-webhook",
      "name": "课程统计触发器",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [280, 300],
      "webhookId": "course-stats"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "user-id",
              "name": "userId",
              "value": "={{ $('课程统计触发器').item.json.params.userId || '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-user-id",
      "name": "提取用户ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [500, 300]
    },
    {
      "parameters": {
        "resource": "rows",
        "operation": "get",
        "tableId": "courses",
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "status",
              "condition": "equals",
              "keyValue": "active"
            }
          ]
        },
        "returnAll": true
      },
      "id": "get-all-courses",
      "name": "获取所有课程",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [720, 200],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "supabase-credentials"
        }
      }
    },
    {
      "parameters": {
        "resource": "rows",
        "operation": "get",
        "tableId": "user_progress",
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "condition": "equals",
              "keyValue": "={{ $json.userId }}"
            }
          ]
        },
        "returnAll": true
      },
      "id": "get-user-progress",
      "name": "获取用户进度",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [720, 400],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "supabase-credentials"
        }
      }
    },
    {
      "parameters": {
        "resource": "rows",
        "operation": "get",
        "tableId": "course_ratings",
        "returnAll": true
      },
      "id": "get-course-ratings",
      "name": "获取课程评分",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [720, 600],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "supabase-credentials"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const allCourses = $('获取所有课程').first().json || [];\nconst userProgress = $('获取用户进度').first().json || [];\nconst courseRatings = $('获取课程评分').first().json || [];\nconst userId = $('提取用户ID').first().json.userId;\n\n// 计算总课程数\nconst totalCourses = allCourses.length;\n\n// 计算总学时\nconst totalHours = allCourses.reduce((sum, course) => {\n  return sum + (course.duration || 0);\n}, 0);\n\n// 计算用户已完成的课程数\nconst completedCourseIds = new Set();\nconst inProgressCourseIds = new Set();\n\nuserProgress.forEach(progress => {\n  if (progress.progress >= 100) {\n    completedCourseIds.add(progress.course_id);\n  } else if (progress.progress > 0) {\n    inProgressCourseIds.add(progress.course_id);\n  }\n});\n\nconst completedCourses = completedCourseIds.size;\nconst inProgressCourses = inProgressCourseIds.size;\n\n// 计算平均评分\nlet totalRating = 0;\nlet ratingCount = 0;\n\n// 按课程分组评分\nconst courseRatingMap = {};\ncourseRatings.forEach(rating => {\n  if (!courseRatingMap[rating.course_id]) {\n    courseRatingMap[rating.course_id] = [];\n  }\n  courseRatingMap[rating.course_id].push(rating.rating);\n});\n\n// 计算每门课程的平均评分，然后计算总平均评分\nObject.values(courseRatingMap).forEach(ratings => {\n  if (ratings.length > 0) {\n    const avgRating = ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length;\n    totalRating += avgRating;\n    ratingCount++;\n  }\n});\n\nconst avgRating = ratingCount > 0 ? Math.round((totalRating / ratingCount) * 10) / 10 : 0;\n\n// 计算用户学习统计\nconst userStats = {\n  enrolledCourses: [...completedCourseIds, ...inProgressCourseIds].length,\n  completedCourses: completedCourses,\n  inProgressCourses: inProgressCourses,\n  completionRate: completedCourseIds.size > 0 ? \n    Math.round((completedCourses / (completedCourses + inProgressCourses)) * 100) : 0\n};\n\n// 按分类统计课程\nconst categoryStats = {};\nallCourses.forEach(course => {\n  const category = course.category || '其他';\n  if (!categoryStats[category]) {\n    categoryStats[category] = {\n      name: category,\n      count: 0,\n      totalHours: 0,\n      avgRating: 0\n    };\n  }\n  categoryStats[category].count++;\n  categoryStats[category].totalHours += course.duration || 0;\n});\n\n// 计算每个分类的平均评分\nObject.keys(categoryStats).forEach(category => {\n  const categoryRatings = [];\n  allCourses\n    .filter(course => course.category === category)\n    .forEach(course => {\n      if (courseRatingMap[course.id]) {\n        const avgCourseRating = courseRatingMap[course.id].reduce((sum, rating) => sum + rating, 0) / courseRatingMap[course.id].length;\n        categoryRatings.push(avgCourseRating);\n      }\n    });\n  \n  categoryStats[category].avgRating = categoryRatings.length > 0 ?\n    Math.round((categoryRatings.reduce((sum, rating) => sum + rating, 0) / categoryRatings.length) * 10) / 10 : 0;\n});\n\nconst result = {\n  // 全局统计\n  globalStats: {\n    totalCourses: totalCourses,\n    totalHours: totalHours,\n    completedCourses: completedCourses,\n    avgRating: avgRating\n  },\n  // 用户个人统计（如果提供了用户ID）\n  userStats: userId ? userStats : null,\n  // 分类统计\n  categoryStats: Object.values(categoryStats),\n  // 详细信息\n  details: {\n    totalRatedCourses: ratingCount,\n    totalRatings: courseRatings.length,\n    categoriesCount: Object.keys(categoryStats).length\n  },\n  timestamp: new Date().toISOString()\n};\n\nreturn result;"
      },
      "id": "calculate-course-stats",
      "name": "计算课程统计",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [940, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": true,
          "data": "={{ $json }}",
          "timestamp": "={{ $json.timestamp }}"
        },
        "options": {}
      },
      "id": "success-response",
      "name": "成功响应",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1160, 400]
    },
    {
      "parameters": {
        "jsCode": "const error = $input.first().error;\n\nreturn {\n  success: false,\n  error: '获取课程统计信息时发生错误：' + (error.message || '未知错误'),\n  timestamp: new Date().toISOString(),\n  details: {\n    errorType: error.name || 'UnknownError',\n    errorMessage: error.message || '未知错误'\n  }\n};"
      },
      "id": "error-handler",
      "name": "错误处理",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [940, 600]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "responseCode": 500,
        "options": {}
      },
      "id": "error-response",
      "name": "错误响应",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1160, 600]
    }
  ],
  "connections": {
    "课程统计触发器": {
      "main": [
        [
          {
            "node": "提取用户ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "提取用户ID": {
      "main": [
        [
          {
            "node": "获取所有课程",
            "type": "main",
            "index": 0
          },
          {
            "node": "获取用户进度",
            "type": "main",
            "index": 0
          },
          {
            "node": "获取课程评分",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取所有课程": {
      "main": [
        [
          {
            "node": "计算课程统计",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取用户进度": {
      "main": [
        [
          {
            "node": "计算课程统计",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "获取课程评分": {
      "main": [
        [
          {
            "node": "计算课程统计",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "计算课程统计": {
      "main": [
        [
          {
            "node": "成功响应",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "错误处理",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "错误处理": {
      "main": [
        [
          {
            "node": "错误响应",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "course-stats-v1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "CourseStatsWorkflow",
  "tags": ["courses", "statistics", "analytics", "supabase"]
}